{
  // 一.ts编译文件夹
  "include": ["example/**/*.d.ts", "example/**/*.ts", "example/**/*.vue"],
  // 二.ts忽略编译文件夹
  "exclude": ["node_modules"],
  // 三.ts编译选项
  "compilerOptions": {
    /* 配置文档：https://aka.ms/tsconfig.json */

    /* 1.基础配置 */
    "outDir": "dist/lib", // ts编译文件输出目录
    "declarationDir": "dist/types", // ts定义文件输出目录
    "target": "ES5", // 编译js的ECMAScript版本：'ES3'（默认）、'ES5', 'ES2015'、'ES2016'、'ES2017'、'ES2018'、'ES2019'、'ES2020'、'ESNEXT'
    "module": "ESNext", // 编译js的模块化语法方案：'None'、'CommonJS'、'AMD'、'System'、'UMD'、'ES6'、'ES2015'、'ES2020'、'ESNext'
    "lib": ["ESNext", "DOM", "DOM.Iterable", "ScriptHost"], // 编译js library支持环境：'ES5'、'ES6'、'ES7'、'ES2015'、'ES2016'、'ES2017'、'ESNext'、'DOM'
    "allowJs": false, // 是否对js也执行编译
    "checkJs": false, // 是否对js也执行语法检测
    "incremental": false, // 是否开启增量编译：开启后会生成tsconfig.tsbuildinfo，下次编译速度加快
    "sourceMap": true, // 是否生成编译的source map
    "declaration": true, // 是否在编译的时候生成相应的.d.ts定义文件
    "emitDeclarationOnly": false, // 是否只生成相应的.d.ts定义文件，而不编译js代码
    "removeComments": false, // 是否编译时删除ts注释
    "downlevelIteration": true, // target低于es5版本时对for of、解构提供polyfill
    "moduleResolution": "Node", // 采用node方式解析import
    "typeRoots": ["node_modules/@types"], // 项目中第三方@types定义位置
    "allowSyntheticDefaultImports": false, // 是否允许合成import
    "importHelpers": false, // 是否从tslib中导入辅助函数
    "jsx": "preserve", // 控制jsx编译为js文件中的方式（只对.tsx文件有效）：'preserve' 不对jsx进行改变并生成.jsx文件
    "noEmitOnError": true, // 报错时不生成输出文件

    /* 2.严格类型检查 */
    "strict": true, // 是否开启js严格模式
    "strictNullChecks": false, // 非null类型是否不能赋值为null
    "strictBindCallApply": false, // 是否对bind、call、apply函数类型强制校验

    /* 3.附加类型检查 */
    "noImplicitAny": true, // 是否必须显式设置any
    "noUnusedLocals": true, // 是否检查未使用的局部变量
    "noUnusedParameters": true, // 是否检查未使用的函数参数
    "noFallthroughCasesInSwitch": true, // 是否强制校验switch语法

    /* 4.模块引用检查 */
    "esModuleInterop": true,
    "baseUrl": ".", // 当前项目根路径
    "paths": {
      "@example/*": ["example/*"],
      "@scss/*": ["scss/*"]
    }, // 当前配置路径别名

    /* 5.命名空间配置 */

    /* 6.Source Map配置 */

    /* 7.实验配置 */
    "experimentalDecorators": true, // 是否开启装饰器语法
    "emitDecoratorMetadata": true, // 是否开启装饰器元信息

    /* 8.高级配置 */
    "skipLibCheck": true, // 是否不检查lib语法
    "forceConsistentCasingInFileNames": true // 禁止对同一个文件的不一致的引用
  }
}
